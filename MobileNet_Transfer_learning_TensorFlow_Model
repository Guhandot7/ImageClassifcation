# TensorFlow Library based multi-class image classification model using Transfer learning from MobileNet pre-trained model

#Import all libraries and packages into jupyter

import numpy as np
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.layers import Dense, Activation
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.metrics import categorical_crossentropy
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.preprocessing import image
from tensorflow.keras.models import Model
from tensorflow.keras.applications import imagenet_utils
from sklearn.metrics import confusion_matrix
import itertools
import os
import shutil
import random
import matplotlib.pyplot as plt
%matplotlib inline

#Down loading MobileNet pre-trained model
mobile = tf.keras.applications.mobilenet.MobileNet()

# Preparing Images and method definition

def prepare_image(file):
    img_path = ('data/train/')
    img = image.load_img(img_path + file, target_size = (224, 224))
    img_array = image.img_to_array(img)
    img_array_expanded_dims = np.expand_dims(img_array, axis=0)
    return tf.keras.applications.mobilenet.preprocess_input(img_array_expanded_dims)
    
# Image display and checking images randomly

from IPython.display import Image
Image(filename = 'data/train/f.jpg', width=300, height=200)

# Runing model and predictions

preprocessed_image = prepare_image('f.jpg')
predictions = mobile.predict(preprocessed_image)
results = imagenet_utils.decode_predictions(predictions)
results
